// ======= *** FUNCTIONS *** =======================================================

/* üöÄ Practice Exercise - Crie uma fun√ß√£o que que receba a nota de uma pessoa candidata, de 01 a 100, em um desafio t√©cnico. Implemente uma l√≥gica que verifique se a pessoa candidata foi aprovada, reprovada ou se essa pessoa est√° na lista de espera. */

// FUN√á√ÉO AN√îNIMA ----------------------------------

const checkApproval = function (score) {
  if (score > 0) {
    if (score >= 80 && score <= 100) {
      return "Parab√©ns, voc√™ faz parte do grupo das pessoas aprovadas!";
    } else if (score >= 60 && score < 80) {
      return "Voc√™ est√° em nossa lista de espera!";
    } else if (score < 60) {
      return "Infelizmente, voc√™ reprovou.";
    } else {
      return "Por favor, insira uma nota v√°lida!";
    }
  } else {
    return "Infelizmente, sua nota foi zero.";
  }
};
console.log(checkApproval(68));

// ===================================================================================

/* üöÄ Practice Exercise - Crie fun√ß√µes para encontrar a √°rea e o per√≠metro de um ret√¢ngulo de base 5 e altura 8. */

// ARROW FUNCTION - one line ---------------------------

const findRectangleArea = (base, height) => base * height;
console.log(findRectangleArea(5, 8));

// FUN√á√ÉO AN√îNIMA ----------------------------------

const findRectanglePerimeter = function (base, height) {
  const perimeter = (base + height) * 2;
  return perimeter;
};
console.log(findRectanglePerimeter(5, 8));

// ===================================================================================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 1. Descubra a idade m√≠nima

Escreva um algoritmo que recebe a idade de Marina, Silvia e Iza e verifique quem √© a pessoa mais jovem. Imprima no terminal uma mensagem informando a pessoa mais jovem no formato:

"X √© a pessoa mais jovem e possui Y anos de idade."

Segue a idade sugerida de cada pessoa: Marina tem 27 anos, Silvia 18 e Iza 63. */

const checkOldest = function (Marina, Silvia, Iza) {
  if (Marina > Silvia && Marina > Iza) {
    return "Marina √© a mais velha";
  } else if (Silvia > Marina && Silvia > Iza) {
    return "Silvia √© a mais velha";
  } else {
    return "Iza √© a mais velha";
  }
};
console.log(checkOldest(27, 18, 63));

// ====================================================================================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 2. Taxa Metab√≥lica Basal

Ana Laura √© uma nutricionista e quer disponibilizar uma calculadora de TMB (Taxa Metab√≥lica Basal) em seu site, vamos ajud√°-la escrevendo um algoritmo. Ele recebe os seguintes dados:

age: n√∫mero maior que 0
sex: M ou F
weight: Em (kg) com n√∫mero maior que 0
height: Em (cm) com n√∫mero maior que 0

A f√≥rmula para homens:
(altura em cent√≠metros x 6,25) + (peso em quilogramas x 9,99) ‚Äì (idade x 4,92) + 5

A f√≥rmula para mulheres:
(altura em cent√≠metros x 6,25) + (peso em quilogramas x 9,99) ‚Äì (idade x 4,92) ‚Äì 161

Imprima no terminal o resultado do c√°lculo no formato:

"A taxa metab√≥lica basal √©: x Kcal" */

// FUN√á√ÉO AN√îNIMA ----------------------------------

const checkTBM = function (age, sex, weight, height) {

  let calculation = parseInt(height * 6.25 + weight * 9.99 - age * 4.92);
  
  if (age > 0 && weight > 0 && height > 0) {
    if (sex === 'F') {
      return `${calculation - 161}`;
    } else if (sex === 'M') {
      return `${calculation - 5}`;
    }
  } // console.log('Please, insert valid information.');
}
console.log(`A taxa metab√≥lica basal √©: ${checkTBM(37, 'F', 58.5, 167)} kcal.`);

// =================================================================