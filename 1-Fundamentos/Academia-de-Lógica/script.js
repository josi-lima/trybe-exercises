// =============== *** FUNCTIONS *** =============================================

// =============== üí° Academia de L√≥gica - 3.1 JavaScript: Primeiros passos  ========================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 1. Descubra a idade m√≠nima

Escreva um algoritmo que recebe a idade de Marina, Silvia e Iza e verifique quem √© a pessoa mais jovem. Imprima no terminal uma mensagem informando a pessoa mais jovem no formato:

"X √© a pessoa mais jovem e possui Y anos de idade."

Segue a idade sugerida de cada pessoa: Marina tem 27 anos, Silvia 18 e Iza 63. */

// FUN√á√ÉO AN√îNIMA ----------------------------------

const checkYoungest = function (ageMarina, ageSilvia, ageIza) {

  if (ageMarina < ageSilvia && ageMarina < ageIza) {
    return `Marina √© a pessoa mais jovem e possui ${ageMarina} anos de idade.`;
  } else if (ageSilvia < ageMarina && ageSilvia < ageIza) {
    return `Silvia √© a pessoa mais jovem e possui ${ageSilvia} anos de idade.`;
  } else {
    return `Iza √© a pessoa mais jovem e possui ${ageIza} anos de idade.`;
  }
};
console.log(checkYoungest(27, 18, 63));

// ====================================================================================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 2. Taxa Metab√≥lica Basal

Ana Laura √© nutricionista e quer disponibilizar uma calculadora de TMB (Taxa Metab√≥lica Basal) em seu site, vamos ajud√°-la escrevendo um algoritmo. Ele recebe os seguintes dados:

age: n√∫mero maior que 0
sex: M ou F
weight: Em (kg) com n√∫mero maior que 0
height: Em (cm) com n√∫mero maior que 0

A f√≥rmula para homens: (altura em cent√≠metros x 6,25) + (peso em quilogramas x 9,99) ‚Äì (idade x 4,92) + 5

A f√≥rmula para mulheres: (altura em cent√≠metros x 6,25) + (peso em quilogramas x 9,99) ‚Äì (idade x 4,92) ‚Äì 161

Imprima no terminal o resultado do c√°lculo no formato: "A taxa metab√≥lica basal √©: x Kcal" */

// FUN√á√ÉO AN√îNIMA ----------------------------------

const checkTMB = function (age, sex, weight, height) {

  let calculation = Math.floor(height * 6.25 + weight * 9.99 - age * 4.92);
  
  if (age > 0 && weight > 0 && height > 0) {
    if (sex === 'F') {
      return `A taxa metab√≥lica basal √©: ${calculation - 161} kcal.`;
    } else if (sex === 'M') {
      return `A taxa metab√≥lica basal √©: ${calculation + 5} kcal.`;
    }
  } return 'Por favor, digite dados v√°lidos.';
}
console.log(checkTMB(37, 'F', 58.5, 167));

// =================================================================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 3. Lanchonete Vegana da Trybe

O bootcamp Trybe abriu uma lanchonete vegana e precisa criar um menu de op√ß√µes para que as pessoas consigam escolher qual lanche maravilhoso e saud√°vel ir√£o pedir. Para isso, escreva um algoritmo que recebe o n√∫mero da op√ß√£o escolhida conforme a tabela abaixo e imprima no terminal a mensagem de acordo com a op√ß√£o escolhida.

Ou seja, se o n√∫mero for 2 o c√≥digo deve imprimir no terminal "2 - McTrybe". Tabela:

"1 - Trybe Lanche Feliz"
"2 - McTrybe"
"3 - TrybeWooper"
"4 - X-Trybe"
"5 - Triplo Trybe com JS"

Caso a pessoa escolha uma op√ß√£o inexistente, imprima no terminal: "Ainda n√£o possu√≠mos esta op√ß√£o :(" */

// ========================================================================================================

// =============== üí° Academia de L√≥gica - 3.2 JavaScript: Array e Loop For  ========================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 1. Encontrando o index

Encontre o index atrav√©s do valor de um elemento. Escreva um algoritmo que recebe 2 par√¢metros:

a) Um array contendo um conjunto de n√∫meros;
b) O valor de um desses elementos.

Procure esse elemento dentro do array, e imprima no terminal a posi√ß√£o index em que o elemento encontra-se. 

Caso n√£o o encontre, imprima: "Elemento n√£o encontrado no array" */

// =================================================================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 2. Retorne os n√∫meros √≠mpares

ü§∏‚Äç‚ôÇÔ∏è A Dora Aventureira gostaria de ter uma lista com todos o n√∫meros √≠mpares entre 1 e 50.

Escreva um algoritmo que imprima no terminal uma string com todos os n√∫meros inteiros √≠mpares desse intervalo.

Use a seguinte estrutura na impress√£o: "x, y, z, ...n" */

// FUN√á√ÉO AN√îNIMA ---------------------------------- to be fixed!!!

const findOddNumbers = function () {
  let oddNumbers = ' ';

  for (let index = 1; index <= 50; index += 2) {
    oddNumbers = index; 
  } return oddNumbers;
}
console.log(findOddNumbers());
// =================================================================

/* üöÄ Practice Exercise (Academia de L√≥gica) - 3. Encontre os n√∫meros divis√≠veis por 3

Escreva um algoritmo que cria uma sequ√™ncia num√©rica de inteiros com intervalo de 1 entre eles. O algoritmo deve receber antes de criar essa sequ√™ncia, o valor inicial e final.

Conte os n√∫meros divis√≠veis por 3 da sequ√™ncia e imprima no terminal condicionando:

Se houver 50 ou mais: "H√° 50 ou mais n√∫meros divis√≠veis por 3."

Caso o contr√°rio: "Sequ√™ncia muito pequena." */

// =================================================================